MIPS application help

This application is designed to communicate with a MIPS system and allow you to
monitor and control parameters. This application has a number of tabs that support
the most popular modules available in MIPS systems. This application also allows
you to define and edit pulse sequences.

This help document also contains appendix A and B that discuss how to install this
application and how to use this application to update firmware in your MIPS system.

When this MIPS application is connected to your MIPS system it will querey your
system to determine the modules that have been installed. The MIPS application
will then delete the tabs for modules not present in your system.

Below is a brief overview of the tab options on the main dialog box, please note
that where connected only the tabs for modules in your system will be shown:

System
  This tab contains options for connection to MIPS. When the app starts it is
  not connected and you will see a message indicating how to connect. MIPS
  can be connected to your host computer using a USB interface, WiFi, or an
  Ethernet connection.  All MIPS system have a USB interface, WiFi and
  Ethernet are options. If using a USB interface the host computer “sees” MIPS
  through a virtual com port. You will need to have drivers install on PCs but
  MACs will work without any additional setup. The appendix in this help file
  give more details on setting up this app.
  Use the configure port button to popup a settings dialog box that will allow
  you to select a com port, select the port and set the baudrate at 115,200. Do
  not change any other parameters. Press apply to accept the changes and the
  dialog will close. You can now press connect and the MIPS app will try to
  connect with MIPS and display the modules detected.
  If connecting via WiFi or Ethernet you can enter a IP address or name into
  the MIPS host name box. If this box is not blank then the app will attempt to
  connect via TCP/IP.
Terminal
  The terminal window allows you to communicate with the MIPS system
  using any of the commands defined in the manual and also define in the MIPS
  commands option under the help menu section of the MIPS app.  Remember
  the MIPS commands are case sensitive.
  The Save menu option will allow you to save all the data in the terminal
  window to a text file for documentation purposes.
  The Load menu option will load a test file and display its contents on the
  terminal window and also send the data to MIPS as well as displaying MIPS
  response. This allows you to define a setup script that can be sent to MIPS to
  simplify setup.
Digital IO
  This tab allows monitoring and control of the digital IO in a MIPS system. The
  save and load menu options allow you to save the current state and load a
  previously saved state. The MIPS app does not automatically scan the input
  or output status, you will find an update button on this tab that will update
  all the parameters shown. Note that this tab shows all the digital IO that is
  possible on a MIPS system, your system likely has fewer digital IO option
  available for connection.
DCbias
  This tab allows monitoring and control of the DC bias outputs of your MIPS
  system. A total of two modules can be installed allowing up to 16 total
  channels. Controls on this tab allow you to monitor all the channels and
  control the output voltages. The MIPS app does not automatically scan the
  output voltage status, you will find an update button on this tab that will
  update all the parameters shown.
RFdriver
  The RFdriver tab allows you to set the RF drive frequencies and drive levels
  for the number of modules in the system. You can also monitor the RF output
  level. An update button is provided to refresh all the controls displayed on
  this tab.
Twave
  This tab allows you to control all parameters for a dual channel Twave
  system. Additionally all the compressor parameters are displayed and can be
  controlled including the multi-pass compression table. The Twave tab has
  context sensitive help so if you select help when this tab is displayed you will
  see instructions on how to define the compression parameters and how to
  use the multi-pass compression table.
FAIMS
  The FAIMS tab allows you to enable and disable FAIMS and monitor the output
  voltages. All the FAIMS tuning and setup is performed using the FAIMS controller's
  user interface. The FAIMS tab allows you to monitor and control the CV and BIAS
  voltages as well as the offset value. The offset value allows you to define the range
  for CV and BIAS. Changing offset will not change the output voltage, just the range.
  With offset set at 0 the CV and BIAS channels have a range of -250 to 250V. The offset
  will allow you to center this range about any value from -250 to 250V. For example
  if you set the offset to 100V then the range will be -150 to 350V.
  The FAIMS tab also supports the CV parking feature that is used with a LC
  separation. You can define a list of retention times and windows with their associated
  CV and BIAS values. The system will automatically adjust the CV and BIAS values
  as the LC separation progresses. Please see the context sensitive help in the FAIMS
  tab for more detail.
Pulse sequence generation
  One of the most powerful features of MIPS is its ability to define complex
  pulse sequences. You can define pulse sequences that change digital outputs
  and DCbias outputs at user defined times. You are able to define an internal
  clock or use an external clock to control the pulse sequences and you trigger
  the execution using a software command or an external hardware trigger.
  This tab allow defining downloaded and executing pulse sequences. This tab
  has context sensitive help that will define all the options in more detail.

The MIPS application also contails a menu bar with a number of useful options
described below:
  Help
    The Help menu heading has both a general help selection and a MIPS commands
    option. The geneal help will display help for the specific tab selected or
    for the control panel if one is displayed. The MIPS command help option will
    list all MIPS commands and these can be entered using the Terminal interface
    by selecting the the Terminal tab.
  File
    The File menu heading contains two options, Load and Save. These functions
    allow you to load and save parameters to a file on your computer. These
    functions will load and save parameters on the tab you have selected or if
    you have one of the control panels displated the load and save will apply
    to the control pannel. When you select load or save you will see a file
    selection dialog allowing to to define the file of your choice.
  Terminal
    The Terminal heading contains only one option, Clear. Selecting clear will
    clear all data in the terminal window.
  Tools
    The Tools menu heading contains functions that enable loading new firmware
    into the MIPS controller as well as control panel options. Appendix B
    outlines the steps to install new firmware in MIPS.
    The control panels are a visual display of a system with MIPS controls
    positioned at logic locations and labeled for there specific application.
    At the time of this writting there are two control panels, one for a
    single funnel system and one for Julia Laskin's soft landing system.
    Control panels have specific MIPS configuration requirements and if your
    connected to MIPS they will first check the configuration before loading.
    If your not connected to MIPS you can load the control panel and use it to
    define and save profiles.

Appendix A: MIPS install details

  There are two version of the MIPS application, one for use on a MAC and another for
  use on a PC. The install files for both can be found on my google drive
  (https://drive.google.com/open?id=0B3IchPRNYqYIcjZhdGFVMVR1VzQ) in the
  MIPSapp directory. This application is a work in progress and it provides an
  example how to communicate with the MIPS system. This application is written in
  Qt and the source code can be found on my github account here:
  https://github.com/GordonAnderson

Install instructions:

MAC:

  It is very easy to install this application on a MAC, simply copy the MIPS.app file
  found in the MAC directory to your application directory or wherever you would
  like. Click on the MIPS.app file to start it up.

PC:

  Installation is a bit more complex on a PC running windows. Windows systems
  do not have the needed drivers to communicate with the MIPS system using the
  arduino due controller. To install the MIPS application perform the following
  steps:
  1.) Copy all the PC directory and all its contents including the sub directories
      and there contents to your windows PC and name the directory MIPS.
  2.) Run the program MIPS.exe. If you get the following error: “The Program can't
      start because MSVCR110.dll is missing from your computer. Try reinstalling
      the program to fix this problem.” then you need to run the vcredist_x86.exe
      application to install the needed windows drivers. After you install the
      drivers the MIPS.exe application should run. ?
  3.) The next step is to make sure the proper USB drivers are installed, this
      Arduino page outlines the install process:
      https://www.arduino.cc/en/Guide/ArduinoDue#toc10 ?
  4.) You do not need to download the drivers because they are already in the PC
      directory that you copied to you system in step 1. When instructed to locate
      the drivers directory use the one in the PC directory. ?

  The MIPS host computer application allows you to upload new MIPS firmware as
  well as control most MIPS functions from your computer.

Appendix B: Instructions for updating the MIPS firmware.

  These instructions define how to use the MIPS application to load new firmware to
  your MIPS system. Before you attempt to load new firmware make sure you can
  communicate with your MIPS system using the MIPS application. You will find two
  versions of the application, one designed to run on a PC and one for a MAC. My
  google drive
  (https://drive.google.com/open?id=0B3IchPRNYqYIcjZhdGFVMVR1VzQ) has a
  MIPSapp dir has all the install files for the two versions and instructions on how to
  install the app. Test the MIPS app by using the Terminal tab to send commands to
  the MIPS system, for example send GVER to return the version of the firmware. Note
  the MIPS commands are case sensitive.

  The current version of MIPS firmware is located on my google drive along with this
  readme file. The firmware files always end in .bin.

  Below are the instructions for updating your systems firmware:

To save the current version:

  1.) Connect to your MIPS system and make sure you press the connect button to
      make the port connection. Pick a fast baud rate, 115,200.
  2.) Disconnect the RF heads from the MIPS box. It is a good idea to disconnect all
      signals from the MIPS box but the RF heads must be disconnected.
  3.) Select the “Save current MIPS firmware” option and follow the prompts.
  4.) In the end you should have a file holding the current version of your MIPS
      system. Save this file.

To program the new version:

  1.) Make sure you have a copy of the MIPS firmware file, it will be named
      something like: MIPS_V1.26.bin. This is the file we will use to update your
      systems.
  2.) Exit the MIPS app and then restart it.
  3.) Connect to your MIPS system and make sure you press the connect button to
      make the port connection. Pick a fast baud rate, 115,200.
  4.) Disconnect the RF heads from the MIPS box. It is a good idea to disconnect all
      signals from the MIPS box but the RF heads must be disconnected.
  5.) Select the “Program MIPS” option and follow the prompts.
  6.) When the programming operation finishes you will see the MIPS box reboot.

If something goes wrong:

  This process is not fool proof and its not uncommon for it to fail for one reason
  or another. This section provides a little background on how the download
  process works and how to recover from a failure.

  The first step in the download or reading of the firmware process is to signal the
  ARM processor to remain in the boolloader on power up and not to run the
  firmware. Next the ARM processor is rebooted. At this point the firmware is still
  present in the ARM processor’s flash but will not run. Then the firmware can be
  read and saved or erased and a new version uploaded. The bootloader function
  is native to the ATMEL ARM processor and a program called bossac is called by
  the MIPS app to do the programming and reading of firmware. The bossca app’s
  output it then redirected to the terminal screen in the MIPS app.

  If the process fails most likely the bootloader flag is cleared so the ARM
  processor stays in the boolloader mode and will not run the MIPS app. This
  renders the MIPS system inoperable. If this happens you can recover by the
  following procedure:

  1.) Disconnect from MIPS by selecting the System tab and then press the
      disconnect button.
  2.) Exit the MIPS app and then restart the app.
  3.) Configure the serial port and note that the com port has likely changed, that
      is because the ARM processor’s bootloader is now running and not the MIPS
      firmware.
  4.) After you configure the serial port press the connect button. Note that the
      system will generate error messages (timeouts) and show them in the status
      bar at the bottom of the dialog box. This is ok, we are connecting only
      because it is required by the MIPS app to do the firmware update.
  5.) Select the terminal tab.
  6.) Now you can use one of the options under tools to program new firmware,
      read the current version or just set the bootloader flag. Note that you do not
      need to set the bootloader flag when programming a new version or reading
      the current version, these functions automatically set the flag when finished.



