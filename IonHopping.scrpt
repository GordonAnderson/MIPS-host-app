// Ion hopping script
//
// Gordon Anderson
//
mips.popupMessage("Ion Hopping, rev 1.0  2019")
worklist = mips.SelectFile("Open","Select Ion Hopping file","csv")
maxLines = mips.ReadCSVfile(worklist,",")
mips.popupMessage(maxLines + " entries found in Ion Hopping file")
PlotSetup()
for(entry=1;entry < maxLines;entry++)
{
  for(i=0;i<10;i++)
  {
    if(mips.ReadCSVentry(0,i) != "")
    {
       if(mips.ReadCSVentry(entry,i) != "")
       {
          if(mips.ReadCSVentry(0,i) == "Delay") 
          {
            mips.msDelay(mips.ReadCSVentry(entry,i))
            Scan()
          }
          else if(mips.ReadCSVentry(0,i) == "Step") mips.statusMessage("Step, " + mips.ReadCSVentry(entry,i))
          else mips.Command(mips.ReadCSVentry(0,i) + "=" + mips.ReadCSVentry(entry,i))
          //mips.popupMessage(mips.ReadCSVentry(0,i) + "=" + mips.ReadCSVentry(entry,i))
       }
    }
    else break
  }
}
mips.statusMessage("Ion Hopping finished!")

var steps;
var averages=1;
var Param = "";

function PlotSetup()
{
// DMS or DMSDMS script for scanning and plotting the data
mips.CreatePlot("CV scan","Current, pA","CV, volts",2)
mips.PlotCommand("Plot1,Pos electrometer current pA");
mips.PlotCommand("Plot2,Neg electrometer current pA");
steps = mips.Command("DMS1.Steps")
dur = mips.Command("Step dur")
res = "Xrange,0," + (steps * dur).toString()
if(parseFloat(mips.Command("DMS1.CVstart")) != parseFloat(mips.Command("DMS1.CVend")))
{
   res += "," + mips.Command("DMS1.CVstart").trim() + "," + mips.Command("DMS1.CVend").trim();
}
else if(parseFloat(mips.Command("DMS2.CVstart")) != parseFloat(mips.Command("DMS2.CVend")))
{
   res += "," + mips.Command("DMS2.CVstart").trim() + "," + mips.Command("DMS2.CVend").trim();
}
mips.PlotCommand(res)
mips.PlotCommand("Yrange,-1,500")
if(mips.Command("Steps per CV scan.Param").trim() != "")
{
   mips.PlotCommand("Scan," + mips.Command("Steps per CV scan.Param").trim() + "," + mips.Command("Steps per CV scan.Start").trim() + "," + mips.Command("Steps per CV scan.Stop").trim());
}
averages = mips.Command("Average")
numscans = mips.Command("Scans")
Param = mips.Command("Steps per CV scan.Param").trim()
if(Param != "")
{
   start = mips.Command("Steps per CV scan.Start")
   delta = (mips.Command("Steps per CV scan.Stop") - mips.Command("Steps per CV scan.Start")) / (numscans-1)
}
}

function Scan()
{
   if(Param != "")
   {
      if((scans % parseInt(mips.Command("Steps per CV scan.Step"),10)) == 0)
      {
         mips.Command(Param + "=" + (parseFloat(start) + delta * (scans)).toFixed(2))
         mips.PlotCommand(Param + "=" + (parseFloat(start) + delta * (scans)).toFixed(2))
         mips.msDelay(mips.Command("Steps per CV scan.Delay"))
      }
   }
   ReadScan()
}

// This function read one CV scan
function ReadScan()
{
   var i
   var avg
   var steps
   var dur
   
   steps = mips.Command("DMS1.Steps")
   dur = mips.Command("Step dur")
   mips.PlotCommand("NewGraph,2," + steps.toString());
   for(avg=0;avg<averages;avg++)
   {
      mips.UpdateHalted(true);
      mips.SendCommand("MIPS","FBSCNSTRT,3\n")
      for(i=0;i<steps;i++)
      {
         res = mips.GetLine("MIPS")
         mips.PlotCommand("AddPoint," + res);
      }
      mips.UpdateHalted(false);
   }
   mips.PlotCommand("Plot");
   mips.PlotCommand("Refresh");  
}